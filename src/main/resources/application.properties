camel.main.name=affinity
server.port=${AFFINITY_PORT}
camel.springboot.main-run-controller=true
camel.servlet.mapping.context-path=/*

# configure connection to the rabbit mq broker using spring rabbitmq style
spring.rabbitmq.host = ${AFFINITY_RABBITMQ_HOST}
spring.rabbitmq.port = ${AFFINITY_RABBITMQ_PORT}
spring.rabbitmq.username = ${AFFINITY_RABBITMQ_USERNAME}
spring.rabbitmq.password = ${AFFINITY_RABBITMQ_PASSWORD}

# turn on auto declare so the exchange, queues are automatic created if not already present in rabbitmq broker
camel.component.spring-rabbitmq.auto-declare = true

# properties used by the component
camel.component.minio.accessKey=${AFFINITY_MINIO_USERNAME}
camel.component.minio.secretKey=${AFFINITY_RABBITMQ_PASSWORD}
camel.component.minio.endpoint=${AFFINITY_MINIO_HOST}
camel.component.minio.proxyPort=${AFFINITY_MINIO_PORT}

# JPA and Hibernate config
spring.jpa.database=POSTGRESQL
spring.sql.init.platform=postgres
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=false
spring.jpa.open-in-view=false

spring.jpa.properties.hibernate.hbm2ddl.create_namespaces=true
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.javax.persistence.validation.mode=none
spring.jackson.date-format=com.fasterxml.jackson.databind.util.ISO8601DateFormat

# postgres database connection params
spring.datasource.url=${AFFINITY_DATABASE_URI}
spring.datasource.username=${AFFINITY_DATABASE_USER}
spring.datasource.password=${AFFINITY_DATABASE_PWD}
spring.datasource.driver-class-name=org.postgresql.Driver

